name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Run tests
        run: go test -v ./...

      - name: Build binaries
        run: |
          # Extract version from tag (remove 'v' prefix)
          VERSION=${GITHUB_REF#refs/tags/v}
          LDFLAGS="-X snakelsp/internal/version.Version=$VERSION"
          
          # Linux AMD64
          GOOS=linux GOARCH=amd64 go build -ldflags "$LDFLAGS" -o snakelsp-linux-amd64 .
          
          # Linux ARM64
          GOOS=linux GOARCH=arm64 go build -ldflags "$LDFLAGS" -o snakelsp-linux-arm64 .
          
          # macOS AMD64
          GOOS=darwin GOARCH=amd64 go build -ldflags "$LDFLAGS" -o snakelsp-darwin-amd64 .
          
          # macOS ARM64 (Apple Silicon)
          GOOS=darwin GOARCH=arm64 go build -ldflags "$LDFLAGS" -o snakelsp-darwin-arm64 .
          
          # Windows AMD64
          GOOS=windows GOARCH=amd64 go build -ldflags "$LDFLAGS" -o snakelsp-windows-amd64.exe .
          
          # Windows ARM64
          GOOS=windows GOARCH=arm64 go build -ldflags "$LDFLAGS" -o snakelsp-windows-arm64.exe .
          

      - name: Generate changelog
        id: changelog
        run: |
          # Get the tag name
          TAG_NAME=${GITHUB_REF#refs/tags/}
          
          # Get previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          # Generate changelog
          if [ -z "$PREV_TAG" ]; then
            # First release
            echo "## Changes" > CHANGELOG.md
            echo "" >> CHANGELOG.md
            git log --pretty=format:"- %s (%h)" >> CHANGELOG.md
          else
            # Subsequent releases
            echo "## Changes since $PREV_TAG" > CHANGELOG.md
            echo "" >> CHANGELOG.md
            git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD >> CHANGELOG.md
          fi
          
          # Set output for release notes
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            snakelsp-linux-amd64
            snakelsp-linux-arm64
            snakelsp-darwin-amd64
            snakelsp-darwin-arm64
            snakelsp-windows-amd64.exe
            snakelsp-windows-arm64.exe
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
